// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBarMessage;

  @NonNull
  public final ImageView attachFileMessage;

  @NonNull
  public final EditText editTextMessage;

  @NonNull
  public final RelativeLayout messageLayout;

  @NonNull
  public final RelativeLayout messageSection;

  @NonNull
  public final TextView nameMessage;

  @NonNull
  public final ImageView pictureMessageMessage;

  @NonNull
  public final CircleImageView profilePictureMessage;

  @NonNull
  public final ProgressBar progressbarMessage;

  @NonNull
  public final RecyclerView recyclerViewMessage;

  @NonNull
  public final ImageView sendButtonMessage;

  @NonNull
  public final TextView statusMessage;

  @NonNull
  public final Toolbar toolbarMessage;

  @NonNull
  public final RelativeLayout usersItemMessage;

  @NonNull
  public final ImageView voiceMessageMessage;

  private ActivityMessageBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayout appBarMessage, @NonNull ImageView attachFileMessage,
      @NonNull EditText editTextMessage, @NonNull RelativeLayout messageLayout,
      @NonNull RelativeLayout messageSection, @NonNull TextView nameMessage,
      @NonNull ImageView pictureMessageMessage, @NonNull CircleImageView profilePictureMessage,
      @NonNull ProgressBar progressbarMessage, @NonNull RecyclerView recyclerViewMessage,
      @NonNull ImageView sendButtonMessage, @NonNull TextView statusMessage,
      @NonNull Toolbar toolbarMessage, @NonNull RelativeLayout usersItemMessage,
      @NonNull ImageView voiceMessageMessage) {
    this.rootView = rootView;
    this.appBarMessage = appBarMessage;
    this.attachFileMessage = attachFileMessage;
    this.editTextMessage = editTextMessage;
    this.messageLayout = messageLayout;
    this.messageSection = messageSection;
    this.nameMessage = nameMessage;
    this.pictureMessageMessage = pictureMessageMessage;
    this.profilePictureMessage = profilePictureMessage;
    this.progressbarMessage = progressbarMessage;
    this.recyclerViewMessage = recyclerViewMessage;
    this.sendButtonMessage = sendButtonMessage;
    this.statusMessage = statusMessage;
    this.toolbarMessage = toolbarMessage;
    this.usersItemMessage = usersItemMessage;
    this.voiceMessageMessage = voiceMessageMessage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar_message;
      AppBarLayout appBarMessage = ViewBindings.findChildViewById(rootView, id);
      if (appBarMessage == null) {
        break missingId;
      }

      id = R.id.attach_file_message;
      ImageView attachFileMessage = ViewBindings.findChildViewById(rootView, id);
      if (attachFileMessage == null) {
        break missingId;
      }

      id = R.id.edit_text_message;
      EditText editTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (editTextMessage == null) {
        break missingId;
      }

      id = R.id.message_layout;
      RelativeLayout messageLayout = ViewBindings.findChildViewById(rootView, id);
      if (messageLayout == null) {
        break missingId;
      }

      id = R.id.message_section;
      RelativeLayout messageSection = ViewBindings.findChildViewById(rootView, id);
      if (messageSection == null) {
        break missingId;
      }

      id = R.id.name_message;
      TextView nameMessage = ViewBindings.findChildViewById(rootView, id);
      if (nameMessage == null) {
        break missingId;
      }

      id = R.id.picture_message_message;
      ImageView pictureMessageMessage = ViewBindings.findChildViewById(rootView, id);
      if (pictureMessageMessage == null) {
        break missingId;
      }

      id = R.id.profile_picture_message;
      CircleImageView profilePictureMessage = ViewBindings.findChildViewById(rootView, id);
      if (profilePictureMessage == null) {
        break missingId;
      }

      id = R.id.progressbar_message;
      ProgressBar progressbarMessage = ViewBindings.findChildViewById(rootView, id);
      if (progressbarMessage == null) {
        break missingId;
      }

      id = R.id.recyclerView_message;
      RecyclerView recyclerViewMessage = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMessage == null) {
        break missingId;
      }

      id = R.id.send_button_message;
      ImageView sendButtonMessage = ViewBindings.findChildViewById(rootView, id);
      if (sendButtonMessage == null) {
        break missingId;
      }

      id = R.id.status_message;
      TextView statusMessage = ViewBindings.findChildViewById(rootView, id);
      if (statusMessage == null) {
        break missingId;
      }

      id = R.id.toolbar_message;
      Toolbar toolbarMessage = ViewBindings.findChildViewById(rootView, id);
      if (toolbarMessage == null) {
        break missingId;
      }

      id = R.id.users_item_message;
      RelativeLayout usersItemMessage = ViewBindings.findChildViewById(rootView, id);
      if (usersItemMessage == null) {
        break missingId;
      }

      id = R.id.voice_message_message;
      ImageView voiceMessageMessage = ViewBindings.findChildViewById(rootView, id);
      if (voiceMessageMessage == null) {
        break missingId;
      }

      return new ActivityMessageBinding((RelativeLayout) rootView, appBarMessage, attachFileMessage,
          editTextMessage, messageLayout, messageSection, nameMessage, pictureMessageMessage,
          profilePictureMessage, progressbarMessage, recyclerViewMessage, sendButtonMessage,
          statusMessage, toolbarMessage, usersItemMessage, voiceMessageMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
