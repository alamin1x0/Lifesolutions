// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ProgressBar progressbarNotificationsKt;

  @NonNull
  public final RecyclerView recyclerViewNotificationsKt;

  @NonNull
  public final TextView textBtnClearNotification;

  @NonNull
  public final Toolbar toolbarNotificationsKt;

  @NonNull
  public final TextView tvNoNotificationKt;

  private NotificationFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ProgressBar progressbarNotificationsKt,
      @NonNull RecyclerView recyclerViewNotificationsKt, @NonNull TextView textBtnClearNotification,
      @NonNull Toolbar toolbarNotificationsKt, @NonNull TextView tvNoNotificationKt) {
    this.rootView = rootView;
    this.progressbarNotificationsKt = progressbarNotificationsKt;
    this.recyclerViewNotificationsKt = recyclerViewNotificationsKt;
    this.textBtnClearNotification = textBtnClearNotification;
    this.toolbarNotificationsKt = toolbarNotificationsKt;
    this.tvNoNotificationKt = tvNoNotificationKt;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.progressbar_notifications_kt;
      ProgressBar progressbarNotificationsKt = ViewBindings.findChildViewById(rootView, id);
      if (progressbarNotificationsKt == null) {
        break missingId;
      }

      id = R.id.recyclerView_notifications_kt;
      RecyclerView recyclerViewNotificationsKt = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewNotificationsKt == null) {
        break missingId;
      }

      id = R.id.text_btn_clear_notification;
      TextView textBtnClearNotification = ViewBindings.findChildViewById(rootView, id);
      if (textBtnClearNotification == null) {
        break missingId;
      }

      id = R.id.toolbar_notifications_kt;
      Toolbar toolbarNotificationsKt = ViewBindings.findChildViewById(rootView, id);
      if (toolbarNotificationsKt == null) {
        break missingId;
      }

      id = R.id.tv_no_notification_kt;
      TextView tvNoNotificationKt = ViewBindings.findChildViewById(rootView, id);
      if (tvNoNotificationKt == null) {
        break missingId;
      }

      return new NotificationFragmentBinding((CoordinatorLayout) rootView,
          progressbarNotificationsKt, recyclerViewNotificationsKt, textBtnClearNotification,
          toolbarNotificationsKt, tvNoNotificationKt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
