// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemLayoutKtBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnMoreOnFeedImage;

  @NonNull
  public final ImageView commentIcon;

  @NonNull
  public final LinearLayout feedCardViewLayout;

  @NonNull
  public final ImageView heartBigView;

  @NonNull
  public final ImageView imgViewLine;

  @NonNull
  public final CircleImageView ivAuthorWithImageKt;

  @NonNull
  public final ImageView ivPostImagePostItemKt;

  @NonNull
  public final LinearLayout layoutBtnCommentWithImage;

  @NonNull
  public final ImageView likeBtnBorderImageView;

  @NonNull
  public final TextView shareBtnText;

  @NonNull
  public final ImageView shareButtonPostItemKt;

  @NonNull
  public final LinearLayout shareLayoutWithImage;

  @NonNull
  public final TextView tvAuthorNameWithImageKt;

  @NonNull
  public final TextView tvCommentCountPostImageItemKt;

  @NonNull
  public final TextView tvDatePostImageItemKt;

  @NonNull
  public final TextView tvLikeCountPostImageItemKt;

  @NonNull
  public final TextView tvPostTitlePostItemKt;

  private PostItemLayoutKtBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnMoreOnFeedImage, @NonNull ImageView commentIcon,
      @NonNull LinearLayout feedCardViewLayout, @NonNull ImageView heartBigView,
      @NonNull ImageView imgViewLine, @NonNull CircleImageView ivAuthorWithImageKt,
      @NonNull ImageView ivPostImagePostItemKt, @NonNull LinearLayout layoutBtnCommentWithImage,
      @NonNull ImageView likeBtnBorderImageView, @NonNull TextView shareBtnText,
      @NonNull ImageView shareButtonPostItemKt, @NonNull LinearLayout shareLayoutWithImage,
      @NonNull TextView tvAuthorNameWithImageKt, @NonNull TextView tvCommentCountPostImageItemKt,
      @NonNull TextView tvDatePostImageItemKt, @NonNull TextView tvLikeCountPostImageItemKt,
      @NonNull TextView tvPostTitlePostItemKt) {
    this.rootView = rootView;
    this.btnMoreOnFeedImage = btnMoreOnFeedImage;
    this.commentIcon = commentIcon;
    this.feedCardViewLayout = feedCardViewLayout;
    this.heartBigView = heartBigView;
    this.imgViewLine = imgViewLine;
    this.ivAuthorWithImageKt = ivAuthorWithImageKt;
    this.ivPostImagePostItemKt = ivPostImagePostItemKt;
    this.layoutBtnCommentWithImage = layoutBtnCommentWithImage;
    this.likeBtnBorderImageView = likeBtnBorderImageView;
    this.shareBtnText = shareBtnText;
    this.shareButtonPostItemKt = shareButtonPostItemKt;
    this.shareLayoutWithImage = shareLayoutWithImage;
    this.tvAuthorNameWithImageKt = tvAuthorNameWithImageKt;
    this.tvCommentCountPostImageItemKt = tvCommentCountPostImageItemKt;
    this.tvDatePostImageItemKt = tvDatePostImageItemKt;
    this.tvLikeCountPostImageItemKt = tvLikeCountPostImageItemKt;
    this.tvPostTitlePostItemKt = tvPostTitlePostItemKt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemLayoutKtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemLayoutKtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item_layout_kt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemLayoutKtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_more_on_feed_image;
      ImageButton btnMoreOnFeedImage = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreOnFeedImage == null) {
        break missingId;
      }

      id = R.id.comment_icon;
      ImageView commentIcon = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon == null) {
        break missingId;
      }

      id = R.id.feed_card_view_layout;
      LinearLayout feedCardViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (feedCardViewLayout == null) {
        break missingId;
      }

      id = R.id.heart_big_view;
      ImageView heartBigView = ViewBindings.findChildViewById(rootView, id);
      if (heartBigView == null) {
        break missingId;
      }

      id = R.id.imgView_line;
      ImageView imgViewLine = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLine == null) {
        break missingId;
      }

      id = R.id.iv_author_with_image_kt;
      CircleImageView ivAuthorWithImageKt = ViewBindings.findChildViewById(rootView, id);
      if (ivAuthorWithImageKt == null) {
        break missingId;
      }

      id = R.id.iv_post_image_post_item_kt;
      ImageView ivPostImagePostItemKt = ViewBindings.findChildViewById(rootView, id);
      if (ivPostImagePostItemKt == null) {
        break missingId;
      }

      id = R.id.layout_btn_comment_with_image;
      LinearLayout layoutBtnCommentWithImage = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnCommentWithImage == null) {
        break missingId;
      }

      id = R.id.like_btn_border_image_view;
      ImageView likeBtnBorderImageView = ViewBindings.findChildViewById(rootView, id);
      if (likeBtnBorderImageView == null) {
        break missingId;
      }

      id = R.id.share_btn_text;
      TextView shareBtnText = ViewBindings.findChildViewById(rootView, id);
      if (shareBtnText == null) {
        break missingId;
      }

      id = R.id.share_button_post_item_kt;
      ImageView shareButtonPostItemKt = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonPostItemKt == null) {
        break missingId;
      }

      id = R.id.share_layout_with_image;
      LinearLayout shareLayoutWithImage = ViewBindings.findChildViewById(rootView, id);
      if (shareLayoutWithImage == null) {
        break missingId;
      }

      id = R.id.tv_author_name_with_image_kt;
      TextView tvAuthorNameWithImageKt = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthorNameWithImageKt == null) {
        break missingId;
      }

      id = R.id.tv_comment_count_post_image_item_kt;
      TextView tvCommentCountPostImageItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvCommentCountPostImageItemKt == null) {
        break missingId;
      }

      id = R.id.tv_date_post_image_item_kt;
      TextView tvDatePostImageItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvDatePostImageItemKt == null) {
        break missingId;
      }

      id = R.id.tv_like_count_post_image_item_kt;
      TextView tvLikeCountPostImageItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvLikeCountPostImageItemKt == null) {
        break missingId;
      }

      id = R.id.tv_post_title_post_item_kt;
      TextView tvPostTitlePostItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvPostTitlePostItemKt == null) {
        break missingId;
      }

      return new PostItemLayoutKtBinding((LinearLayout) rootView, btnMoreOnFeedImage, commentIcon,
          feedCardViewLayout, heartBigView, imgViewLine, ivAuthorWithImageKt, ivPostImagePostItemKt,
          layoutBtnCommentWithImage, likeBtnBorderImageView, shareBtnText, shareButtonPostItemKt,
          shareLayoutWithImage, tvAuthorNameWithImageKt, tvCommentCountPostImageItemKt,
          tvDatePostImageItemKt, tvLikeCountPostImageItemKt, tvPostTitlePostItemKt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
