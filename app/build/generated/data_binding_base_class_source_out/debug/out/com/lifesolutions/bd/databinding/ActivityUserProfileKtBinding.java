// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserProfileKtBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView addressUserProfile;

  @NonNull
  public final ImageButton backButtonUserProfile;

  @NonNull
  public final RelativeLayout backgroundUserProfile;

  @NonNull
  public final TextView birthDateUserProfile;

  @NonNull
  public final TextView bloodGroupUserProfile;

  @NonNull
  public final ImageView coverPhotoUserProfile;

  @NonNull
  public final LinearLayout editProfileProfile;

  @NonNull
  public final TextView friendsUserProfile;

  @NonNull
  public final ImageView icAddFriendUserProfile;

  @NonNull
  public final ImageView ivVerifiedBadge;

  @NonNull
  public final TextView joinedUserProfile;

  @NonNull
  public final TextView lastCallTime;

  @NonNull
  public final LinearLayout layoutAcceptRequest;

  @NonNull
  public final LinearLayout layoutAddFriend;

  @NonNull
  public final LinearLayout layoutBioInfo;

  @NonNull
  public final LinearLayout layoutCancelRequest;

  @NonNull
  public final LinearLayout layoutFriendView;

  @NonNull
  public final LinearLayout layoutNameField;

  @NonNull
  public final LinearLayout messageUserProfile;

  @NonNull
  public final TextView postCountUserProfile;

  @NonNull
  public final CircleImageView profilePictureUserProfile;

  @NonNull
  public final RecyclerView rvUserPostProfile;

  @NonNull
  public final TextView studentInfoUserProfile;

  @NonNull
  public final TextView talkTimeCount;

  @NonNull
  public final TextView tvUserNameInfo;

  @NonNull
  public final TextView txtAddFiendUserProfile;

  @NonNull
  public final TextView userBioProfile;

  @NonNull
  public final CardView userProfileDetailsSection;

  @NonNull
  public final RelativeLayout userProfileMainLayout;

  private ActivityUserProfileKtBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView addressUserProfile, @NonNull ImageButton backButtonUserProfile,
      @NonNull RelativeLayout backgroundUserProfile, @NonNull TextView birthDateUserProfile,
      @NonNull TextView bloodGroupUserProfile, @NonNull ImageView coverPhotoUserProfile,
      @NonNull LinearLayout editProfileProfile, @NonNull TextView friendsUserProfile,
      @NonNull ImageView icAddFriendUserProfile, @NonNull ImageView ivVerifiedBadge,
      @NonNull TextView joinedUserProfile, @NonNull TextView lastCallTime,
      @NonNull LinearLayout layoutAcceptRequest, @NonNull LinearLayout layoutAddFriend,
      @NonNull LinearLayout layoutBioInfo, @NonNull LinearLayout layoutCancelRequest,
      @NonNull LinearLayout layoutFriendView, @NonNull LinearLayout layoutNameField,
      @NonNull LinearLayout messageUserProfile, @NonNull TextView postCountUserProfile,
      @NonNull CircleImageView profilePictureUserProfile, @NonNull RecyclerView rvUserPostProfile,
      @NonNull TextView studentInfoUserProfile, @NonNull TextView talkTimeCount,
      @NonNull TextView tvUserNameInfo, @NonNull TextView txtAddFiendUserProfile,
      @NonNull TextView userBioProfile, @NonNull CardView userProfileDetailsSection,
      @NonNull RelativeLayout userProfileMainLayout) {
    this.rootView = rootView;
    this.addressUserProfile = addressUserProfile;
    this.backButtonUserProfile = backButtonUserProfile;
    this.backgroundUserProfile = backgroundUserProfile;
    this.birthDateUserProfile = birthDateUserProfile;
    this.bloodGroupUserProfile = bloodGroupUserProfile;
    this.coverPhotoUserProfile = coverPhotoUserProfile;
    this.editProfileProfile = editProfileProfile;
    this.friendsUserProfile = friendsUserProfile;
    this.icAddFriendUserProfile = icAddFriendUserProfile;
    this.ivVerifiedBadge = ivVerifiedBadge;
    this.joinedUserProfile = joinedUserProfile;
    this.lastCallTime = lastCallTime;
    this.layoutAcceptRequest = layoutAcceptRequest;
    this.layoutAddFriend = layoutAddFriend;
    this.layoutBioInfo = layoutBioInfo;
    this.layoutCancelRequest = layoutCancelRequest;
    this.layoutFriendView = layoutFriendView;
    this.layoutNameField = layoutNameField;
    this.messageUserProfile = messageUserProfile;
    this.postCountUserProfile = postCountUserProfile;
    this.profilePictureUserProfile = profilePictureUserProfile;
    this.rvUserPostProfile = rvUserPostProfile;
    this.studentInfoUserProfile = studentInfoUserProfile;
    this.talkTimeCount = talkTimeCount;
    this.tvUserNameInfo = tvUserNameInfo;
    this.txtAddFiendUserProfile = txtAddFiendUserProfile;
    this.userBioProfile = userBioProfile;
    this.userProfileDetailsSection = userProfileDetailsSection;
    this.userProfileMainLayout = userProfileMainLayout;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserProfileKtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserProfileKtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_profile_kt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserProfileKtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_user_profile;
      TextView addressUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (addressUserProfile == null) {
        break missingId;
      }

      id = R.id.back_button_user_profile;
      ImageButton backButtonUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (backButtonUserProfile == null) {
        break missingId;
      }

      id = R.id.background_user_profile;
      RelativeLayout backgroundUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (backgroundUserProfile == null) {
        break missingId;
      }

      id = R.id.birth_date_user_profile;
      TextView birthDateUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (birthDateUserProfile == null) {
        break missingId;
      }

      id = R.id.blood_group_user_profile;
      TextView bloodGroupUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupUserProfile == null) {
        break missingId;
      }

      id = R.id.cover_photo_user_profile;
      ImageView coverPhotoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (coverPhotoUserProfile == null) {
        break missingId;
      }

      id = R.id.edit_profile_profile;
      LinearLayout editProfileProfile = ViewBindings.findChildViewById(rootView, id);
      if (editProfileProfile == null) {
        break missingId;
      }

      id = R.id.friends_user_profile;
      TextView friendsUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (friendsUserProfile == null) {
        break missingId;
      }

      id = R.id.ic_add_friend_user_profile;
      ImageView icAddFriendUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (icAddFriendUserProfile == null) {
        break missingId;
      }

      id = R.id.iv_verified_badge;
      ImageView ivVerifiedBadge = ViewBindings.findChildViewById(rootView, id);
      if (ivVerifiedBadge == null) {
        break missingId;
      }

      id = R.id.joined_user_profile;
      TextView joinedUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (joinedUserProfile == null) {
        break missingId;
      }

      id = R.id.last_call_time;
      TextView lastCallTime = ViewBindings.findChildViewById(rootView, id);
      if (lastCallTime == null) {
        break missingId;
      }

      id = R.id.layout_accept_request;
      LinearLayout layoutAcceptRequest = ViewBindings.findChildViewById(rootView, id);
      if (layoutAcceptRequest == null) {
        break missingId;
      }

      id = R.id.layout_add_friend;
      LinearLayout layoutAddFriend = ViewBindings.findChildViewById(rootView, id);
      if (layoutAddFriend == null) {
        break missingId;
      }

      id = R.id.layout_bio_info;
      LinearLayout layoutBioInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutBioInfo == null) {
        break missingId;
      }

      id = R.id.layout_cancel_request;
      LinearLayout layoutCancelRequest = ViewBindings.findChildViewById(rootView, id);
      if (layoutCancelRequest == null) {
        break missingId;
      }

      id = R.id.layout_friend_view;
      LinearLayout layoutFriendView = ViewBindings.findChildViewById(rootView, id);
      if (layoutFriendView == null) {
        break missingId;
      }

      id = R.id.layout_name_field;
      LinearLayout layoutNameField = ViewBindings.findChildViewById(rootView, id);
      if (layoutNameField == null) {
        break missingId;
      }

      id = R.id.message_user_profile;
      LinearLayout messageUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (messageUserProfile == null) {
        break missingId;
      }

      id = R.id.post_count_user_profile;
      TextView postCountUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (postCountUserProfile == null) {
        break missingId;
      }

      id = R.id.profile_picture_user_profile;
      CircleImageView profilePictureUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (profilePictureUserProfile == null) {
        break missingId;
      }

      id = R.id.rv_user_post_profile;
      RecyclerView rvUserPostProfile = ViewBindings.findChildViewById(rootView, id);
      if (rvUserPostProfile == null) {
        break missingId;
      }

      id = R.id.studentInfo_user_profile;
      TextView studentInfoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoUserProfile == null) {
        break missingId;
      }

      id = R.id.talk_time_count;
      TextView talkTimeCount = ViewBindings.findChildViewById(rootView, id);
      if (talkTimeCount == null) {
        break missingId;
      }

      id = R.id.tv_user_name_info;
      TextView tvUserNameInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvUserNameInfo == null) {
        break missingId;
      }

      id = R.id.txt_add_fiend_user_profile;
      TextView txtAddFiendUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (txtAddFiendUserProfile == null) {
        break missingId;
      }

      id = R.id.user_bio_profile;
      TextView userBioProfile = ViewBindings.findChildViewById(rootView, id);
      if (userBioProfile == null) {
        break missingId;
      }

      id = R.id.user_profile_details_section;
      CardView userProfileDetailsSection = ViewBindings.findChildViewById(rootView, id);
      if (userProfileDetailsSection == null) {
        break missingId;
      }

      id = R.id.user_profile_main_layout;
      RelativeLayout userProfileMainLayout = ViewBindings.findChildViewById(rootView, id);
      if (userProfileMainLayout == null) {
        break missingId;
      }

      return new ActivityUserProfileKtBinding((NestedScrollView) rootView, addressUserProfile,
          backButtonUserProfile, backgroundUserProfile, birthDateUserProfile, bloodGroupUserProfile,
          coverPhotoUserProfile, editProfileProfile, friendsUserProfile, icAddFriendUserProfile,
          ivVerifiedBadge, joinedUserProfile, lastCallTime, layoutAcceptRequest, layoutAddFriend,
          layoutBioInfo, layoutCancelRequest, layoutFriendView, layoutNameField, messageUserProfile,
          postCountUserProfile, profilePictureUserProfile, rvUserPostProfile,
          studentInfoUserProfile, talkTimeCount, tvUserNameInfo, txtAddFiendUserProfile,
          userBioProfile, userProfileDetailsSection, userProfileMainLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
