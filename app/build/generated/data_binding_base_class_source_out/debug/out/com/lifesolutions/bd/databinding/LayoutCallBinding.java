// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCallBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView backButtonCallScreen;

  @NonNull
  public final LinearLayout callButtonHolder;

  @NonNull
  public final TextView callHeadingCallScreen;

  @NonNull
  public final LinearLayout callScreenFacebookBannerContainer;

  @NonNull
  public final ImageButton declineCallScreen;

  @NonNull
  public final ImageView fixedBgColor;

  @NonNull
  public final LinearLayout layoutCallTopTextView;

  @NonNull
  public final LinearLayout layoutProfileThumbView;

  @NonNull
  public final LinearLayout layoutRandomCallTopTextView;

  @NonNull
  public final LottieAnimationView lottieAnimationUser;

  @NonNull
  public final ImageButton loudCallScreen;

  @NonNull
  public final ImageView mainCallSentBgProfile;

  @NonNull
  public final ImageButton muteCallScreen;

  @NonNull
  public final TextView nameCallScreen;

  @NonNull
  public final CircleImageView profileImageCallScreen;

  @NonNull
  public final TextView statusCallScreen;

  @NonNull
  public final TextView timerCallScreen;

  @NonNull
  public final TextView tvOnRandomCallConnect;

  private LayoutCallBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView backButtonCallScreen, @NonNull LinearLayout callButtonHolder,
      @NonNull TextView callHeadingCallScreen,
      @NonNull LinearLayout callScreenFacebookBannerContainer,
      @NonNull ImageButton declineCallScreen, @NonNull ImageView fixedBgColor,
      @NonNull LinearLayout layoutCallTopTextView, @NonNull LinearLayout layoutProfileThumbView,
      @NonNull LinearLayout layoutRandomCallTopTextView,
      @NonNull LottieAnimationView lottieAnimationUser, @NonNull ImageButton loudCallScreen,
      @NonNull ImageView mainCallSentBgProfile, @NonNull ImageButton muteCallScreen,
      @NonNull TextView nameCallScreen, @NonNull CircleImageView profileImageCallScreen,
      @NonNull TextView statusCallScreen, @NonNull TextView timerCallScreen,
      @NonNull TextView tvOnRandomCallConnect) {
    this.rootView = rootView;
    this.backButtonCallScreen = backButtonCallScreen;
    this.callButtonHolder = callButtonHolder;
    this.callHeadingCallScreen = callHeadingCallScreen;
    this.callScreenFacebookBannerContainer = callScreenFacebookBannerContainer;
    this.declineCallScreen = declineCallScreen;
    this.fixedBgColor = fixedBgColor;
    this.layoutCallTopTextView = layoutCallTopTextView;
    this.layoutProfileThumbView = layoutProfileThumbView;
    this.layoutRandomCallTopTextView = layoutRandomCallTopTextView;
    this.lottieAnimationUser = lottieAnimationUser;
    this.loudCallScreen = loudCallScreen;
    this.mainCallSentBgProfile = mainCallSentBgProfile;
    this.muteCallScreen = muteCallScreen;
    this.nameCallScreen = nameCallScreen;
    this.profileImageCallScreen = profileImageCallScreen;
    this.statusCallScreen = statusCallScreen;
    this.timerCallScreen = timerCallScreen;
    this.tvOnRandomCallConnect = tvOnRandomCallConnect;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button_call_screen;
      ImageView backButtonCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (backButtonCallScreen == null) {
        break missingId;
      }

      id = R.id.call_button_holder;
      LinearLayout callButtonHolder = ViewBindings.findChildViewById(rootView, id);
      if (callButtonHolder == null) {
        break missingId;
      }

      id = R.id.call_heading_call_screen;
      TextView callHeadingCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (callHeadingCallScreen == null) {
        break missingId;
      }

      id = R.id.call_screen_facebook_banner_container;
      LinearLayout callScreenFacebookBannerContainer = ViewBindings.findChildViewById(rootView, id);
      if (callScreenFacebookBannerContainer == null) {
        break missingId;
      }

      id = R.id.decline_call_screen;
      ImageButton declineCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (declineCallScreen == null) {
        break missingId;
      }

      id = R.id.fixed_bg_color;
      ImageView fixedBgColor = ViewBindings.findChildViewById(rootView, id);
      if (fixedBgColor == null) {
        break missingId;
      }

      id = R.id.layout_call_top_text_view;
      LinearLayout layoutCallTopTextView = ViewBindings.findChildViewById(rootView, id);
      if (layoutCallTopTextView == null) {
        break missingId;
      }

      id = R.id.layout_profile_thumb_view;
      LinearLayout layoutProfileThumbView = ViewBindings.findChildViewById(rootView, id);
      if (layoutProfileThumbView == null) {
        break missingId;
      }

      id = R.id.layout_random_call_top_text_view;
      LinearLayout layoutRandomCallTopTextView = ViewBindings.findChildViewById(rootView, id);
      if (layoutRandomCallTopTextView == null) {
        break missingId;
      }

      id = R.id.lottie_animation_user;
      LottieAnimationView lottieAnimationUser = ViewBindings.findChildViewById(rootView, id);
      if (lottieAnimationUser == null) {
        break missingId;
      }

      id = R.id.loud_call_screen;
      ImageButton loudCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (loudCallScreen == null) {
        break missingId;
      }

      id = R.id.main_call_sent_bg_profile;
      ImageView mainCallSentBgProfile = ViewBindings.findChildViewById(rootView, id);
      if (mainCallSentBgProfile == null) {
        break missingId;
      }

      id = R.id.mute_call_screen;
      ImageButton muteCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (muteCallScreen == null) {
        break missingId;
      }

      id = R.id.name_call_screen;
      TextView nameCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (nameCallScreen == null) {
        break missingId;
      }

      id = R.id.profile_image_call_screen;
      CircleImageView profileImageCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (profileImageCallScreen == null) {
        break missingId;
      }

      id = R.id.status_call_screen;
      TextView statusCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (statusCallScreen == null) {
        break missingId;
      }

      id = R.id.timer_call_screen;
      TextView timerCallScreen = ViewBindings.findChildViewById(rootView, id);
      if (timerCallScreen == null) {
        break missingId;
      }

      id = R.id.tv_on_random_call_connect;
      TextView tvOnRandomCallConnect = ViewBindings.findChildViewById(rootView, id);
      if (tvOnRandomCallConnect == null) {
        break missingId;
      }

      return new LayoutCallBinding((RelativeLayout) rootView, backButtonCallScreen,
          callButtonHolder, callHeadingCallScreen, callScreenFacebookBannerContainer,
          declineCallScreen, fixedBgColor, layoutCallTopTextView, layoutProfileThumbView,
          layoutRandomCallTopTextView, lottieAnimationUser, loudCallScreen, mainCallSentBgProfile,
          muteCallScreen, nameCallScreen, profileImageCallScreen, statusCallScreen, timerCallScreen,
          tvOnRandomCallConnect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
