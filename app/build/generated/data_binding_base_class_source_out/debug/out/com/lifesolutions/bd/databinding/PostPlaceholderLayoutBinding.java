// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostPlaceholderLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView datePostItem;

  @NonNull
  public final ImageView imgViewLinePlaceholder;

  @NonNull
  public final ImageView postImagePlaceholder;

  @NonNull
  public final TextView postTitlePlaceholder;

  @NonNull
  public final CircleImageView userImagePlaceholder;

  @NonNull
  public final TextView userNamePlaceholder;

  private PostPlaceholderLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView datePostItem, @NonNull ImageView imgViewLinePlaceholder,
      @NonNull ImageView postImagePlaceholder, @NonNull TextView postTitlePlaceholder,
      @NonNull CircleImageView userImagePlaceholder, @NonNull TextView userNamePlaceholder) {
    this.rootView = rootView;
    this.datePostItem = datePostItem;
    this.imgViewLinePlaceholder = imgViewLinePlaceholder;
    this.postImagePlaceholder = postImagePlaceholder;
    this.postTitlePlaceholder = postTitlePlaceholder;
    this.userImagePlaceholder = userImagePlaceholder;
    this.userNamePlaceholder = userNamePlaceholder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostPlaceholderLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostPlaceholderLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_placeholder_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostPlaceholderLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_post_item;
      TextView datePostItem = ViewBindings.findChildViewById(rootView, id);
      if (datePostItem == null) {
        break missingId;
      }

      id = R.id.imgView_line_placeholder;
      ImageView imgViewLinePlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLinePlaceholder == null) {
        break missingId;
      }

      id = R.id.post_image_placeholder;
      ImageView postImagePlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (postImagePlaceholder == null) {
        break missingId;
      }

      id = R.id.post_title_placeholder;
      TextView postTitlePlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (postTitlePlaceholder == null) {
        break missingId;
      }

      id = R.id.user_image_placeholder;
      CircleImageView userImagePlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (userImagePlaceholder == null) {
        break missingId;
      }

      id = R.id.user_name_placeholder;
      TextView userNamePlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (userNamePlaceholder == null) {
        break missingId;
      }

      return new PostPlaceholderLayoutBinding((LinearLayout) rootView, datePostItem,
          imgViewLinePlaceholder, postImagePlaceholder, postTitlePlaceholder, userImagePlaceholder,
          userNamePlaceholder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
