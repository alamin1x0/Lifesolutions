// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.lifesolutions.bd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final RelativeLayout bottomLayoutQuestion;

  @NonNull
  public final TextView nextQuestion;

  @NonNull
  public final TextView optionFour;

  @NonNull
  public final TextView optionOne;

  @NonNull
  public final TextView optionThree;

  @NonNull
  public final TextView optionTwo;

  @NonNull
  public final LinearLayout questionContainer;

  @NonNull
  public final LinearLayout questionLayout;

  @NonNull
  public final TextView questionQuestion;

  @NonNull
  public final TextView quitQuestion;

  @NonNull
  public final TextView scoreCounter;

  @NonNull
  public final TextView timerQuestion;

  @NonNull
  public final Toolbar toolbarQuestion;

  @NonNull
  public final TextView toolbarTitleQuestion;

  private ActivityGameBinding(@NonNull RelativeLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull RelativeLayout bottomLayoutQuestion, @NonNull TextView nextQuestion,
      @NonNull TextView optionFour, @NonNull TextView optionOne, @NonNull TextView optionThree,
      @NonNull TextView optionTwo, @NonNull LinearLayout questionContainer,
      @NonNull LinearLayout questionLayout, @NonNull TextView questionQuestion,
      @NonNull TextView quitQuestion, @NonNull TextView scoreCounter,
      @NonNull TextView timerQuestion, @NonNull Toolbar toolbarQuestion,
      @NonNull TextView toolbarTitleQuestion) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.bottomLayoutQuestion = bottomLayoutQuestion;
    this.nextQuestion = nextQuestion;
    this.optionFour = optionFour;
    this.optionOne = optionOne;
    this.optionThree = optionThree;
    this.optionTwo = optionTwo;
    this.questionContainer = questionContainer;
    this.questionLayout = questionLayout;
    this.questionQuestion = questionQuestion;
    this.quitQuestion = quitQuestion;
    this.scoreCounter = scoreCounter;
    this.timerQuestion = timerQuestion;
    this.toolbarQuestion = toolbarQuestion;
    this.toolbarTitleQuestion = toolbarTitleQuestion;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.bottom_layout_question;
      RelativeLayout bottomLayoutQuestion = ViewBindings.findChildViewById(rootView, id);
      if (bottomLayoutQuestion == null) {
        break missingId;
      }

      id = R.id.next_question;
      TextView nextQuestion = ViewBindings.findChildViewById(rootView, id);
      if (nextQuestion == null) {
        break missingId;
      }

      id = R.id.option_four;
      TextView optionFour = ViewBindings.findChildViewById(rootView, id);
      if (optionFour == null) {
        break missingId;
      }

      id = R.id.option_one;
      TextView optionOne = ViewBindings.findChildViewById(rootView, id);
      if (optionOne == null) {
        break missingId;
      }

      id = R.id.option_three;
      TextView optionThree = ViewBindings.findChildViewById(rootView, id);
      if (optionThree == null) {
        break missingId;
      }

      id = R.id.option_two;
      TextView optionTwo = ViewBindings.findChildViewById(rootView, id);
      if (optionTwo == null) {
        break missingId;
      }

      id = R.id.question_container;
      LinearLayout questionContainer = ViewBindings.findChildViewById(rootView, id);
      if (questionContainer == null) {
        break missingId;
      }

      id = R.id.question_layout;
      LinearLayout questionLayout = ViewBindings.findChildViewById(rootView, id);
      if (questionLayout == null) {
        break missingId;
      }

      id = R.id.question_question;
      TextView questionQuestion = ViewBindings.findChildViewById(rootView, id);
      if (questionQuestion == null) {
        break missingId;
      }

      id = R.id.quit_question;
      TextView quitQuestion = ViewBindings.findChildViewById(rootView, id);
      if (quitQuestion == null) {
        break missingId;
      }

      id = R.id.score_counter;
      TextView scoreCounter = ViewBindings.findChildViewById(rootView, id);
      if (scoreCounter == null) {
        break missingId;
      }

      id = R.id.timer_question;
      TextView timerQuestion = ViewBindings.findChildViewById(rootView, id);
      if (timerQuestion == null) {
        break missingId;
      }

      id = R.id.toolbar_question;
      Toolbar toolbarQuestion = ViewBindings.findChildViewById(rootView, id);
      if (toolbarQuestion == null) {
        break missingId;
      }

      id = R.id.toolbar_title_question;
      TextView toolbarTitleQuestion = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitleQuestion == null) {
        break missingId;
      }

      return new ActivityGameBinding((RelativeLayout) rootView, appbar, bottomLayoutQuestion,
          nextQuestion, optionFour, optionOne, optionThree, optionTwo, questionContainer,
          questionLayout, questionQuestion, quitQuestion, scoreCounter, timerQuestion,
          toolbarQuestion, toolbarTitleQuestion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
