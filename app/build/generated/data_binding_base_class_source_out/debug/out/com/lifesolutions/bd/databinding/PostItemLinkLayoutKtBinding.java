// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemLinkLayoutKtBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnMoreOnFeedLink;

  @NonNull
  public final ImageView commentIcon;

  @NonNull
  public final LinearLayout feedCardViewLayout;

  @NonNull
  public final ImageView imgViewLine;

  @NonNull
  public final CircleImageView ivAuthorWithLinkKt;

  @NonNull
  public final ImageView ivLinkImagePostItemKt;

  @NonNull
  public final LinearLayout layoutBtnCommentWithLink;

  @NonNull
  public final LinearLayout layoutPostLinkImgItem;

  @NonNull
  public final ImageView likeBtnWithLink;

  @NonNull
  public final LinearLayout rawTextLayoutLinkView;

  @NonNull
  public final TextView shareBtnText;

  @NonNull
  public final ImageView shareButtonPostItemKt;

  @NonNull
  public final LinearLayout shareLayoutWithLink;

  @NonNull
  public final TextView tvAuthorNameWithLinkKt;

  @NonNull
  public final TextView tvCommentCountWithLinkItemKt;

  @NonNull
  public final TextView tvDateWithLinkItemKt;

  @NonNull
  public final TextView tvLikeCountWithLinkItemKt;

  @NonNull
  public final TextView tvLinkRawPostItem;

  @NonNull
  public final TextView tvLinkTitlePostItem;

  @NonNull
  public final TextView tvRawTextLinkPost;

  private PostItemLinkLayoutKtBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnMoreOnFeedLink, @NonNull ImageView commentIcon,
      @NonNull LinearLayout feedCardViewLayout, @NonNull ImageView imgViewLine,
      @NonNull CircleImageView ivAuthorWithLinkKt, @NonNull ImageView ivLinkImagePostItemKt,
      @NonNull LinearLayout layoutBtnCommentWithLink, @NonNull LinearLayout layoutPostLinkImgItem,
      @NonNull ImageView likeBtnWithLink, @NonNull LinearLayout rawTextLayoutLinkView,
      @NonNull TextView shareBtnText, @NonNull ImageView shareButtonPostItemKt,
      @NonNull LinearLayout shareLayoutWithLink, @NonNull TextView tvAuthorNameWithLinkKt,
      @NonNull TextView tvCommentCountWithLinkItemKt, @NonNull TextView tvDateWithLinkItemKt,
      @NonNull TextView tvLikeCountWithLinkItemKt, @NonNull TextView tvLinkRawPostItem,
      @NonNull TextView tvLinkTitlePostItem, @NonNull TextView tvRawTextLinkPost) {
    this.rootView = rootView;
    this.btnMoreOnFeedLink = btnMoreOnFeedLink;
    this.commentIcon = commentIcon;
    this.feedCardViewLayout = feedCardViewLayout;
    this.imgViewLine = imgViewLine;
    this.ivAuthorWithLinkKt = ivAuthorWithLinkKt;
    this.ivLinkImagePostItemKt = ivLinkImagePostItemKt;
    this.layoutBtnCommentWithLink = layoutBtnCommentWithLink;
    this.layoutPostLinkImgItem = layoutPostLinkImgItem;
    this.likeBtnWithLink = likeBtnWithLink;
    this.rawTextLayoutLinkView = rawTextLayoutLinkView;
    this.shareBtnText = shareBtnText;
    this.shareButtonPostItemKt = shareButtonPostItemKt;
    this.shareLayoutWithLink = shareLayoutWithLink;
    this.tvAuthorNameWithLinkKt = tvAuthorNameWithLinkKt;
    this.tvCommentCountWithLinkItemKt = tvCommentCountWithLinkItemKt;
    this.tvDateWithLinkItemKt = tvDateWithLinkItemKt;
    this.tvLikeCountWithLinkItemKt = tvLikeCountWithLinkItemKt;
    this.tvLinkRawPostItem = tvLinkRawPostItem;
    this.tvLinkTitlePostItem = tvLinkTitlePostItem;
    this.tvRawTextLinkPost = tvRawTextLinkPost;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemLinkLayoutKtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemLinkLayoutKtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item_link_layout_kt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemLinkLayoutKtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_more_on_feed_link;
      ImageButton btnMoreOnFeedLink = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreOnFeedLink == null) {
        break missingId;
      }

      id = R.id.comment_icon;
      ImageView commentIcon = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon == null) {
        break missingId;
      }

      id = R.id.feed_card_view_layout;
      LinearLayout feedCardViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (feedCardViewLayout == null) {
        break missingId;
      }

      id = R.id.imgView_line;
      ImageView imgViewLine = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLine == null) {
        break missingId;
      }

      id = R.id.iv_author_with_link_kt;
      CircleImageView ivAuthorWithLinkKt = ViewBindings.findChildViewById(rootView, id);
      if (ivAuthorWithLinkKt == null) {
        break missingId;
      }

      id = R.id.iv_link_image_post_item_kt;
      ImageView ivLinkImagePostItemKt = ViewBindings.findChildViewById(rootView, id);
      if (ivLinkImagePostItemKt == null) {
        break missingId;
      }

      id = R.id.layout_btn_comment_with_link;
      LinearLayout layoutBtnCommentWithLink = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnCommentWithLink == null) {
        break missingId;
      }

      id = R.id.layout_post_link_img_item;
      LinearLayout layoutPostLinkImgItem = ViewBindings.findChildViewById(rootView, id);
      if (layoutPostLinkImgItem == null) {
        break missingId;
      }

      id = R.id.like_btn_with_link;
      ImageView likeBtnWithLink = ViewBindings.findChildViewById(rootView, id);
      if (likeBtnWithLink == null) {
        break missingId;
      }

      id = R.id.raw_text_layout_link_view;
      LinearLayout rawTextLayoutLinkView = ViewBindings.findChildViewById(rootView, id);
      if (rawTextLayoutLinkView == null) {
        break missingId;
      }

      id = R.id.share_btn_text;
      TextView shareBtnText = ViewBindings.findChildViewById(rootView, id);
      if (shareBtnText == null) {
        break missingId;
      }

      id = R.id.share_button_post_item_kt;
      ImageView shareButtonPostItemKt = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonPostItemKt == null) {
        break missingId;
      }

      id = R.id.share_layout_with_link;
      LinearLayout shareLayoutWithLink = ViewBindings.findChildViewById(rootView, id);
      if (shareLayoutWithLink == null) {
        break missingId;
      }

      id = R.id.tv_author_name_with_link_kt;
      TextView tvAuthorNameWithLinkKt = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthorNameWithLinkKt == null) {
        break missingId;
      }

      id = R.id.tv_comment_count_with_link_item_kt;
      TextView tvCommentCountWithLinkItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvCommentCountWithLinkItemKt == null) {
        break missingId;
      }

      id = R.id.tv_date_with_link_item_kt;
      TextView tvDateWithLinkItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvDateWithLinkItemKt == null) {
        break missingId;
      }

      id = R.id.tv_like_count_with_link_item_kt;
      TextView tvLikeCountWithLinkItemKt = ViewBindings.findChildViewById(rootView, id);
      if (tvLikeCountWithLinkItemKt == null) {
        break missingId;
      }

      id = R.id.tv_link_raw_post_item;
      TextView tvLinkRawPostItem = ViewBindings.findChildViewById(rootView, id);
      if (tvLinkRawPostItem == null) {
        break missingId;
      }

      id = R.id.tv_link_title_post_item;
      TextView tvLinkTitlePostItem = ViewBindings.findChildViewById(rootView, id);
      if (tvLinkTitlePostItem == null) {
        break missingId;
      }

      id = R.id.tv_raw_text_link_post;
      TextView tvRawTextLinkPost = ViewBindings.findChildViewById(rootView, id);
      if (tvRawTextLinkPost == null) {
        break missingId;
      }

      return new PostItemLinkLayoutKtBinding((LinearLayout) rootView, btnMoreOnFeedLink,
          commentIcon, feedCardViewLayout, imgViewLine, ivAuthorWithLinkKt, ivLinkImagePostItemKt,
          layoutBtnCommentWithLink, layoutPostLinkImgItem, likeBtnWithLink, rawTextLayoutLinkView,
          shareBtnText, shareButtonPostItemKt, shareLayoutWithLink, tvAuthorNameWithLinkKt,
          tvCommentCountWithLinkItemKt, tvDateWithLinkItemKt, tvLikeCountWithLinkItemKt,
          tvLinkRawPostItem, tvLinkTitlePostItem, tvRawTextLinkPost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
