// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final LinearLayout addFriendUserProfile;

  @NonNull
  public final TextView addressUserProfile;

  @NonNull
  public final ImageButton backButtonUserProfile;

  @NonNull
  public final RelativeLayout backgroundUserProfile;

  @NonNull
  public final TextView birthDateUserProfile;

  @NonNull
  public final TextView bloodGroupUserProfile;

  @NonNull
  public final ImageView coverPhotoUserProfile;

  @NonNull
  public final TextView designationUserProfile;

  @NonNull
  public final LinearLayout editProfileProfile;

  @NonNull
  public final TextView followersUserProfile;

  @NonNull
  public final ImageView icAddFriendUserProfile;

  @NonNull
  public final TextView joinedUserProfile;

  @NonNull
  public final LinearLayout messageUserProfile;

  @NonNull
  public final TextView nameUserProfile;

  @NonNull
  public final TextView postCountUserProfile;

  @NonNull
  public final RecyclerView postRecyclerViewUserProfile;

  @NonNull
  public final CircleImageView profilePictureUserProfile;

  @NonNull
  public final ProgressBar progressBarUserProfile;

  @NonNull
  public final TextView studentInfoUserProfile;

  @NonNull
  public final TextView talkTimeCount;

  @NonNull
  public final TextView txtAddFiendUserProfile;

  @NonNull
  public final CardView userProfileDetailsSection;

  private ActivityUserProfileBinding(@NonNull NestedScrollView rootView,
      @NonNull LinearLayout addFriendUserProfile, @NonNull TextView addressUserProfile,
      @NonNull ImageButton backButtonUserProfile, @NonNull RelativeLayout backgroundUserProfile,
      @NonNull TextView birthDateUserProfile, @NonNull TextView bloodGroupUserProfile,
      @NonNull ImageView coverPhotoUserProfile, @NonNull TextView designationUserProfile,
      @NonNull LinearLayout editProfileProfile, @NonNull TextView followersUserProfile,
      @NonNull ImageView icAddFriendUserProfile, @NonNull TextView joinedUserProfile,
      @NonNull LinearLayout messageUserProfile, @NonNull TextView nameUserProfile,
      @NonNull TextView postCountUserProfile, @NonNull RecyclerView postRecyclerViewUserProfile,
      @NonNull CircleImageView profilePictureUserProfile,
      @NonNull ProgressBar progressBarUserProfile, @NonNull TextView studentInfoUserProfile,
      @NonNull TextView talkTimeCount, @NonNull TextView txtAddFiendUserProfile,
      @NonNull CardView userProfileDetailsSection) {
    this.rootView = rootView;
    this.addFriendUserProfile = addFriendUserProfile;
    this.addressUserProfile = addressUserProfile;
    this.backButtonUserProfile = backButtonUserProfile;
    this.backgroundUserProfile = backgroundUserProfile;
    this.birthDateUserProfile = birthDateUserProfile;
    this.bloodGroupUserProfile = bloodGroupUserProfile;
    this.coverPhotoUserProfile = coverPhotoUserProfile;
    this.designationUserProfile = designationUserProfile;
    this.editProfileProfile = editProfileProfile;
    this.followersUserProfile = followersUserProfile;
    this.icAddFriendUserProfile = icAddFriendUserProfile;
    this.joinedUserProfile = joinedUserProfile;
    this.messageUserProfile = messageUserProfile;
    this.nameUserProfile = nameUserProfile;
    this.postCountUserProfile = postCountUserProfile;
    this.postRecyclerViewUserProfile = postRecyclerViewUserProfile;
    this.profilePictureUserProfile = profilePictureUserProfile;
    this.progressBarUserProfile = progressBarUserProfile;
    this.studentInfoUserProfile = studentInfoUserProfile;
    this.talkTimeCount = talkTimeCount;
    this.txtAddFiendUserProfile = txtAddFiendUserProfile;
    this.userProfileDetailsSection = userProfileDetailsSection;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_friend_user_profile;
      LinearLayout addFriendUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (addFriendUserProfile == null) {
        break missingId;
      }

      id = R.id.address_user_profile;
      TextView addressUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (addressUserProfile == null) {
        break missingId;
      }

      id = R.id.back_button_user_profile;
      ImageButton backButtonUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (backButtonUserProfile == null) {
        break missingId;
      }

      id = R.id.background_user_profile;
      RelativeLayout backgroundUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (backgroundUserProfile == null) {
        break missingId;
      }

      id = R.id.birth_date_user_profile;
      TextView birthDateUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (birthDateUserProfile == null) {
        break missingId;
      }

      id = R.id.blood_group_user_profile;
      TextView bloodGroupUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupUserProfile == null) {
        break missingId;
      }

      id = R.id.cover_photo_user_profile;
      ImageView coverPhotoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (coverPhotoUserProfile == null) {
        break missingId;
      }

      id = R.id.designation_user_profile;
      TextView designationUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (designationUserProfile == null) {
        break missingId;
      }

      id = R.id.edit_profile_profile;
      LinearLayout editProfileProfile = ViewBindings.findChildViewById(rootView, id);
      if (editProfileProfile == null) {
        break missingId;
      }

      id = R.id.followers_user_profile;
      TextView followersUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (followersUserProfile == null) {
        break missingId;
      }

      id = R.id.ic_add_friend_user_profile;
      ImageView icAddFriendUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (icAddFriendUserProfile == null) {
        break missingId;
      }

      id = R.id.joined_user_profile;
      TextView joinedUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (joinedUserProfile == null) {
        break missingId;
      }

      id = R.id.message_user_profile;
      LinearLayout messageUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (messageUserProfile == null) {
        break missingId;
      }

      id = R.id.name_user_profile;
      TextView nameUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (nameUserProfile == null) {
        break missingId;
      }

      id = R.id.post_count_user_profile;
      TextView postCountUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (postCountUserProfile == null) {
        break missingId;
      }

      id = R.id.post_recyclerView_user_profile;
      RecyclerView postRecyclerViewUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (postRecyclerViewUserProfile == null) {
        break missingId;
      }

      id = R.id.profile_picture_user_profile;
      CircleImageView profilePictureUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (profilePictureUserProfile == null) {
        break missingId;
      }

      id = R.id.progress_bar_user_profile;
      ProgressBar progressBarUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (progressBarUserProfile == null) {
        break missingId;
      }

      id = R.id.studentInfo_user_profile;
      TextView studentInfoUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoUserProfile == null) {
        break missingId;
      }

      id = R.id.talk_time_count;
      TextView talkTimeCount = ViewBindings.findChildViewById(rootView, id);
      if (talkTimeCount == null) {
        break missingId;
      }

      id = R.id.txt_add_fiend_user_profile;
      TextView txtAddFiendUserProfile = ViewBindings.findChildViewById(rootView, id);
      if (txtAddFiendUserProfile == null) {
        break missingId;
      }

      id = R.id.user_profile_details_section;
      CardView userProfileDetailsSection = ViewBindings.findChildViewById(rootView, id);
      if (userProfileDetailsSection == null) {
        break missingId;
      }

      return new ActivityUserProfileBinding((NestedScrollView) rootView, addFriendUserProfile,
          addressUserProfile, backButtonUserProfile, backgroundUserProfile, birthDateUserProfile,
          bloodGroupUserProfile, coverPhotoUserProfile, designationUserProfile, editProfileProfile,
          followersUserProfile, icAddFriendUserProfile, joinedUserProfile, messageUserProfile,
          nameUserProfile, postCountUserProfile, postRecyclerViewUserProfile,
          profilePictureUserProfile, progressBarUserProfile, studentInfoUserProfile, talkTimeCount,
          txtAddFiendUserProfile, userProfileDetailsSection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
