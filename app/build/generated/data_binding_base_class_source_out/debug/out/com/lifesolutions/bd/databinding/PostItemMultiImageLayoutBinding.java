// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemMultiImageLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnMoreOnFeedMultiImage;

  @NonNull
  public final ImageView commentIcon3;

  @NonNull
  public final TextView datePostItemMulti;

  @NonNull
  public final ImageView imgViewLine3;

  @NonNull
  public final LinearLayout layoutBtnCommentMultiImage;

  @NonNull
  public final ImageView likeBtnMultiImage;

  @NonNull
  public final LinearLayout postItem;

  @NonNull
  public final TextView postTitlePostItemMulti;

  @NonNull
  public final RecyclerView rvMultiImageView;

  @NonNull
  public final TextView shareBtnText;

  @NonNull
  public final ImageView shareButtonPostItemKt3;

  @NonNull
  public final LinearLayout shareLayoutMultiImage;

  @NonNull
  public final TextView tvCommentCountMultiImage;

  @NonNull
  public final TextView tvLikeCountMultiImage;

  @NonNull
  public final CircleImageView userImagePostItemMulti;

  @NonNull
  public final TextView userNamePostItemMulti;

  private PostItemMultiImageLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnMoreOnFeedMultiImage, @NonNull ImageView commentIcon3,
      @NonNull TextView datePostItemMulti, @NonNull ImageView imgViewLine3,
      @NonNull LinearLayout layoutBtnCommentMultiImage, @NonNull ImageView likeBtnMultiImage,
      @NonNull LinearLayout postItem, @NonNull TextView postTitlePostItemMulti,
      @NonNull RecyclerView rvMultiImageView, @NonNull TextView shareBtnText,
      @NonNull ImageView shareButtonPostItemKt3, @NonNull LinearLayout shareLayoutMultiImage,
      @NonNull TextView tvCommentCountMultiImage, @NonNull TextView tvLikeCountMultiImage,
      @NonNull CircleImageView userImagePostItemMulti, @NonNull TextView userNamePostItemMulti) {
    this.rootView = rootView;
    this.btnMoreOnFeedMultiImage = btnMoreOnFeedMultiImage;
    this.commentIcon3 = commentIcon3;
    this.datePostItemMulti = datePostItemMulti;
    this.imgViewLine3 = imgViewLine3;
    this.layoutBtnCommentMultiImage = layoutBtnCommentMultiImage;
    this.likeBtnMultiImage = likeBtnMultiImage;
    this.postItem = postItem;
    this.postTitlePostItemMulti = postTitlePostItemMulti;
    this.rvMultiImageView = rvMultiImageView;
    this.shareBtnText = shareBtnText;
    this.shareButtonPostItemKt3 = shareButtonPostItemKt3;
    this.shareLayoutMultiImage = shareLayoutMultiImage;
    this.tvCommentCountMultiImage = tvCommentCountMultiImage;
    this.tvLikeCountMultiImage = tvLikeCountMultiImage;
    this.userImagePostItemMulti = userImagePostItemMulti;
    this.userNamePostItemMulti = userNamePostItemMulti;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemMultiImageLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemMultiImageLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item_multi_image_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemMultiImageLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_more_on_feed_multi_image;
      ImageButton btnMoreOnFeedMultiImage = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreOnFeedMultiImage == null) {
        break missingId;
      }

      id = R.id.comment_icon3;
      ImageView commentIcon3 = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon3 == null) {
        break missingId;
      }

      id = R.id.date_post_item_multi;
      TextView datePostItemMulti = ViewBindings.findChildViewById(rootView, id);
      if (datePostItemMulti == null) {
        break missingId;
      }

      id = R.id.imgView_line3;
      ImageView imgViewLine3 = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLine3 == null) {
        break missingId;
      }

      id = R.id.layout_btn_comment_multi_image;
      LinearLayout layoutBtnCommentMultiImage = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnCommentMultiImage == null) {
        break missingId;
      }

      id = R.id.like_btn_multi_image;
      ImageView likeBtnMultiImage = ViewBindings.findChildViewById(rootView, id);
      if (likeBtnMultiImage == null) {
        break missingId;
      }

      LinearLayout postItem = (LinearLayout) rootView;

      id = R.id.post_title_post_item_multi;
      TextView postTitlePostItemMulti = ViewBindings.findChildViewById(rootView, id);
      if (postTitlePostItemMulti == null) {
        break missingId;
      }

      id = R.id.rv_multi_image_view;
      RecyclerView rvMultiImageView = ViewBindings.findChildViewById(rootView, id);
      if (rvMultiImageView == null) {
        break missingId;
      }

      id = R.id.share_btn_text;
      TextView shareBtnText = ViewBindings.findChildViewById(rootView, id);
      if (shareBtnText == null) {
        break missingId;
      }

      id = R.id.share_button_post_item_kt3;
      ImageView shareButtonPostItemKt3 = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonPostItemKt3 == null) {
        break missingId;
      }

      id = R.id.share_layout_multi_image;
      LinearLayout shareLayoutMultiImage = ViewBindings.findChildViewById(rootView, id);
      if (shareLayoutMultiImage == null) {
        break missingId;
      }

      id = R.id.tv_comment_count_multi_image;
      TextView tvCommentCountMultiImage = ViewBindings.findChildViewById(rootView, id);
      if (tvCommentCountMultiImage == null) {
        break missingId;
      }

      id = R.id.tv_like_count_multi_image;
      TextView tvLikeCountMultiImage = ViewBindings.findChildViewById(rootView, id);
      if (tvLikeCountMultiImage == null) {
        break missingId;
      }

      id = R.id.user_image_post_item_multi;
      CircleImageView userImagePostItemMulti = ViewBindings.findChildViewById(rootView, id);
      if (userImagePostItemMulti == null) {
        break missingId;
      }

      id = R.id.user_name_post_item_multi;
      TextView userNamePostItemMulti = ViewBindings.findChildViewById(rootView, id);
      if (userNamePostItemMulti == null) {
        break missingId;
      }

      return new PostItemMultiImageLayoutBinding((LinearLayout) rootView, btnMoreOnFeedMultiImage,
          commentIcon3, datePostItemMulti, imgViewLine3, layoutBtnCommentMultiImage,
          likeBtnMultiImage, postItem, postTitlePostItemMulti, rvMultiImageView, shareBtnText,
          shareButtonPostItemKt3, shareLayoutMultiImage, tvCommentCountMultiImage,
          tvLikeCountMultiImage, userImagePostItemMulti, userNamePostItemMulti);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
