// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemBigTextLayoutKtBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnMoreOnFeedBigText;

  @NonNull
  public final ImageView commentIcon;

  @NonNull
  public final LinearLayout feedCardViewLayout;

  @NonNull
  public final ImageView imgViewLine;

  @NonNull
  public final CircleImageView ivAuthorImageWithBigText;

  @NonNull
  public final LinearLayout layoutBtnCommentWithBigText;

  @NonNull
  public final ImageView likeBtnWithBigText;

  @NonNull
  public final LinearLayout rawTextLayoutBigText;

  @NonNull
  public final TextView seeMore;

  @NonNull
  public final TextView shareBtnText;

  @NonNull
  public final ImageView shareButtonPostItemKt;

  @NonNull
  public final LinearLayout shareLayoutWithBigText;

  @NonNull
  public final TextView tvAuthorNameWithBigText;

  @NonNull
  public final TextView tvCommentCountWithBigText;

  @NonNull
  public final TextView tvDateWithBigText;

  @NonNull
  public final TextView tvLikeCountWithBigText;

  @NonNull
  public final TextView tvRawBigText;

  @NonNull
  public final TextView tvRawBigText2;

  private PostItemBigTextLayoutKtBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnMoreOnFeedBigText, @NonNull ImageView commentIcon,
      @NonNull LinearLayout feedCardViewLayout, @NonNull ImageView imgViewLine,
      @NonNull CircleImageView ivAuthorImageWithBigText,
      @NonNull LinearLayout layoutBtnCommentWithBigText, @NonNull ImageView likeBtnWithBigText,
      @NonNull LinearLayout rawTextLayoutBigText, @NonNull TextView seeMore,
      @NonNull TextView shareBtnText, @NonNull ImageView shareButtonPostItemKt,
      @NonNull LinearLayout shareLayoutWithBigText, @NonNull TextView tvAuthorNameWithBigText,
      @NonNull TextView tvCommentCountWithBigText, @NonNull TextView tvDateWithBigText,
      @NonNull TextView tvLikeCountWithBigText, @NonNull TextView tvRawBigText,
      @NonNull TextView tvRawBigText2) {
    this.rootView = rootView;
    this.btnMoreOnFeedBigText = btnMoreOnFeedBigText;
    this.commentIcon = commentIcon;
    this.feedCardViewLayout = feedCardViewLayout;
    this.imgViewLine = imgViewLine;
    this.ivAuthorImageWithBigText = ivAuthorImageWithBigText;
    this.layoutBtnCommentWithBigText = layoutBtnCommentWithBigText;
    this.likeBtnWithBigText = likeBtnWithBigText;
    this.rawTextLayoutBigText = rawTextLayoutBigText;
    this.seeMore = seeMore;
    this.shareBtnText = shareBtnText;
    this.shareButtonPostItemKt = shareButtonPostItemKt;
    this.shareLayoutWithBigText = shareLayoutWithBigText;
    this.tvAuthorNameWithBigText = tvAuthorNameWithBigText;
    this.tvCommentCountWithBigText = tvCommentCountWithBigText;
    this.tvDateWithBigText = tvDateWithBigText;
    this.tvLikeCountWithBigText = tvLikeCountWithBigText;
    this.tvRawBigText = tvRawBigText;
    this.tvRawBigText2 = tvRawBigText2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemBigTextLayoutKtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemBigTextLayoutKtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item_big_text_layout_kt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemBigTextLayoutKtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_more_on_feed_big_text;
      ImageButton btnMoreOnFeedBigText = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreOnFeedBigText == null) {
        break missingId;
      }

      id = R.id.comment_icon;
      ImageView commentIcon = ViewBindings.findChildViewById(rootView, id);
      if (commentIcon == null) {
        break missingId;
      }

      id = R.id.feed_card_view_layout;
      LinearLayout feedCardViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (feedCardViewLayout == null) {
        break missingId;
      }

      id = R.id.imgView_line;
      ImageView imgViewLine = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLine == null) {
        break missingId;
      }

      id = R.id.iv_author_image_with_big_text;
      CircleImageView ivAuthorImageWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (ivAuthorImageWithBigText == null) {
        break missingId;
      }

      id = R.id.layout_btn_comment_with_big_text;
      LinearLayout layoutBtnCommentWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnCommentWithBigText == null) {
        break missingId;
      }

      id = R.id.like_btn_with_big_text;
      ImageView likeBtnWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (likeBtnWithBigText == null) {
        break missingId;
      }

      id = R.id.raw_text_layout_big_text;
      LinearLayout rawTextLayoutBigText = ViewBindings.findChildViewById(rootView, id);
      if (rawTextLayoutBigText == null) {
        break missingId;
      }

      id = R.id.see_more;
      TextView seeMore = ViewBindings.findChildViewById(rootView, id);
      if (seeMore == null) {
        break missingId;
      }

      id = R.id.share_btn_text;
      TextView shareBtnText = ViewBindings.findChildViewById(rootView, id);
      if (shareBtnText == null) {
        break missingId;
      }

      id = R.id.share_button_post_item_kt;
      ImageView shareButtonPostItemKt = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonPostItemKt == null) {
        break missingId;
      }

      id = R.id.share_layout_with_big_text;
      LinearLayout shareLayoutWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (shareLayoutWithBigText == null) {
        break missingId;
      }

      id = R.id.tv_author_name_with_big_text;
      TextView tvAuthorNameWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthorNameWithBigText == null) {
        break missingId;
      }

      id = R.id.tv_comment_count_with_big_text;
      TextView tvCommentCountWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (tvCommentCountWithBigText == null) {
        break missingId;
      }

      id = R.id.tv_date_with_big_text;
      TextView tvDateWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (tvDateWithBigText == null) {
        break missingId;
      }

      id = R.id.tv_like_count_with_big_text;
      TextView tvLikeCountWithBigText = ViewBindings.findChildViewById(rootView, id);
      if (tvLikeCountWithBigText == null) {
        break missingId;
      }

      id = R.id.tv_raw_big_text;
      TextView tvRawBigText = ViewBindings.findChildViewById(rootView, id);
      if (tvRawBigText == null) {
        break missingId;
      }

      id = R.id.tv_raw_big_text2;
      TextView tvRawBigText2 = ViewBindings.findChildViewById(rootView, id);
      if (tvRawBigText2 == null) {
        break missingId;
      }

      return new PostItemBigTextLayoutKtBinding((LinearLayout) rootView, btnMoreOnFeedBigText,
          commentIcon, feedCardViewLayout, imgViewLine, ivAuthorImageWithBigText,
          layoutBtnCommentWithBigText, likeBtnWithBigText, rawTextLayoutBigText, seeMore,
          shareBtnText, shareButtonPostItemKt, shareLayoutWithBigText, tvAuthorNameWithBigText,
          tvCommentCountWithBigText, tvDateWithBigText, tvLikeCountWithBigText, tvRawBigText,
          tvRawBigText2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
