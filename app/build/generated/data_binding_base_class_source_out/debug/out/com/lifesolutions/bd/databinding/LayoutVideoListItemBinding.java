// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import com.like.LikeButton;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutVideoListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnMoreVideoFeed;

  @NonNull
  public final ImageView commentIconVideoFeed;

  @NonNull
  public final ImageView imgViewLine;

  @NonNull
  public final CircleImageView ivAuthorWithVideoFeed;

  @NonNull
  public final LinearLayout layoutBtnCommentVideoFeed;

  @NonNull
  public final LikeButton likeBtnBorderVideoFeed;

  @NonNull
  public final FrameLayout mediaContainer;

  @NonNull
  public final LinearLayout parent;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView shareBtnTextVideoFeed;

  @NonNull
  public final ImageView shareButtonVideoFeed;

  @NonNull
  public final LinearLayout shareLayoutVideoFeed;

  @NonNull
  public final ImageView thumbnail;

  @NonNull
  public final ConstraintLayout topProfileView;

  @NonNull
  public final TextView tvAuthorNameWithVideoFeed;

  @NonNull
  public final TextView tvCommentCountVideoFeed;

  @NonNull
  public final TextView tvDateVideoFeed;

  @NonNull
  public final TextView tvLikeCountPostVideoFeed;

  @NonNull
  public final ImageView volumeControl;

  private LayoutVideoListItemBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnMoreVideoFeed, @NonNull ImageView commentIconVideoFeed,
      @NonNull ImageView imgViewLine, @NonNull CircleImageView ivAuthorWithVideoFeed,
      @NonNull LinearLayout layoutBtnCommentVideoFeed, @NonNull LikeButton likeBtnBorderVideoFeed,
      @NonNull FrameLayout mediaContainer, @NonNull LinearLayout parent,
      @NonNull ProgressBar progressBar, @NonNull TextView shareBtnTextVideoFeed,
      @NonNull ImageView shareButtonVideoFeed, @NonNull LinearLayout shareLayoutVideoFeed,
      @NonNull ImageView thumbnail, @NonNull ConstraintLayout topProfileView,
      @NonNull TextView tvAuthorNameWithVideoFeed, @NonNull TextView tvCommentCountVideoFeed,
      @NonNull TextView tvDateVideoFeed, @NonNull TextView tvLikeCountPostVideoFeed,
      @NonNull ImageView volumeControl) {
    this.rootView = rootView;
    this.btnMoreVideoFeed = btnMoreVideoFeed;
    this.commentIconVideoFeed = commentIconVideoFeed;
    this.imgViewLine = imgViewLine;
    this.ivAuthorWithVideoFeed = ivAuthorWithVideoFeed;
    this.layoutBtnCommentVideoFeed = layoutBtnCommentVideoFeed;
    this.likeBtnBorderVideoFeed = likeBtnBorderVideoFeed;
    this.mediaContainer = mediaContainer;
    this.parent = parent;
    this.progressBar = progressBar;
    this.shareBtnTextVideoFeed = shareBtnTextVideoFeed;
    this.shareButtonVideoFeed = shareButtonVideoFeed;
    this.shareLayoutVideoFeed = shareLayoutVideoFeed;
    this.thumbnail = thumbnail;
    this.topProfileView = topProfileView;
    this.tvAuthorNameWithVideoFeed = tvAuthorNameWithVideoFeed;
    this.tvCommentCountVideoFeed = tvCommentCountVideoFeed;
    this.tvDateVideoFeed = tvDateVideoFeed;
    this.tvLikeCountPostVideoFeed = tvLikeCountPostVideoFeed;
    this.volumeControl = volumeControl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutVideoListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutVideoListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_video_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutVideoListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_more_video_feed;
      ImageButton btnMoreVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (btnMoreVideoFeed == null) {
        break missingId;
      }

      id = R.id.comment_icon_video_feed;
      ImageView commentIconVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (commentIconVideoFeed == null) {
        break missingId;
      }

      id = R.id.imgView_line;
      ImageView imgViewLine = ViewBindings.findChildViewById(rootView, id);
      if (imgViewLine == null) {
        break missingId;
      }

      id = R.id.iv_author_with_video_feed;
      CircleImageView ivAuthorWithVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (ivAuthorWithVideoFeed == null) {
        break missingId;
      }

      id = R.id.layout_btn_comment_video_feed;
      LinearLayout layoutBtnCommentVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnCommentVideoFeed == null) {
        break missingId;
      }

      id = R.id.like_btn_border_video_feed;
      LikeButton likeBtnBorderVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (likeBtnBorderVideoFeed == null) {
        break missingId;
      }

      id = R.id.media_container;
      FrameLayout mediaContainer = ViewBindings.findChildViewById(rootView, id);
      if (mediaContainer == null) {
        break missingId;
      }

      LinearLayout parent = (LinearLayout) rootView;

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.share_btn_text_video_feed;
      TextView shareBtnTextVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (shareBtnTextVideoFeed == null) {
        break missingId;
      }

      id = R.id.share_button_video_feed;
      ImageView shareButtonVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonVideoFeed == null) {
        break missingId;
      }

      id = R.id.share_layout_video_feed;
      LinearLayout shareLayoutVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (shareLayoutVideoFeed == null) {
        break missingId;
      }

      id = R.id.thumbnail;
      ImageView thumbnail = ViewBindings.findChildViewById(rootView, id);
      if (thumbnail == null) {
        break missingId;
      }

      id = R.id.top_profile_view;
      ConstraintLayout topProfileView = ViewBindings.findChildViewById(rootView, id);
      if (topProfileView == null) {
        break missingId;
      }

      id = R.id.tv_author_name_with_video_feed;
      TextView tvAuthorNameWithVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (tvAuthorNameWithVideoFeed == null) {
        break missingId;
      }

      id = R.id.tv_comment_count_video_feed;
      TextView tvCommentCountVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (tvCommentCountVideoFeed == null) {
        break missingId;
      }

      id = R.id.tv_date_video_feed;
      TextView tvDateVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (tvDateVideoFeed == null) {
        break missingId;
      }

      id = R.id.tv_like_count_post_video_feed;
      TextView tvLikeCountPostVideoFeed = ViewBindings.findChildViewById(rootView, id);
      if (tvLikeCountPostVideoFeed == null) {
        break missingId;
      }

      id = R.id.volume_control;
      ImageView volumeControl = ViewBindings.findChildViewById(rootView, id);
      if (volumeControl == null) {
        break missingId;
      }

      return new LayoutVideoListItemBinding((LinearLayout) rootView, btnMoreVideoFeed,
          commentIconVideoFeed, imgViewLine, ivAuthorWithVideoFeed, layoutBtnCommentVideoFeed,
          likeBtnBorderVideoFeed, mediaContainer, parent, progressBar, shareBtnTextVideoFeed,
          shareButtonVideoFeed, shareLayoutVideoFeed, thumbnail, topProfileView,
          tvAuthorNameWithVideoFeed, tvCommentCountVideoFeed, tvDateVideoFeed,
          tvLikeCountPostVideoFeed, volumeControl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
