// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final LinearLayout addReferCode;

  @NonNull
  public final TextView addressProfile;

  @NonNull
  public final ImageButton backButtonProfile;

  @NonNull
  public final RelativeLayout backgroundProfile;

  @NonNull
  public final TextView birthDateProfile;

  @NonNull
  public final TextView bloodGroupProfile;

  @NonNull
  public final ImageButton btnUploadCoverPhoto;

  @NonNull
  public final ImageButton btnUploadProfilePhoto;

  @NonNull
  public final ImageView coverPictureProfile;

  @NonNull
  public final LinearLayout editProfileProfile;

  @NonNull
  public final TextView emailProfile;

  @NonNull
  public final TextView followersProfile;

  @NonNull
  public final LinearLayout friendsLayoutProfile;

  @NonNull
  public final TextView friendsProfile;

  @NonNull
  public final CardView groupsLayoutProfile;

  @NonNull
  public final TextView joinedProfile;

  @NonNull
  public final RelativeLayout mainProfileViewArea;

  @NonNull
  public final LinearLayout myPostProfile;

  @NonNull
  public final TextView myPostsProfile;

  @NonNull
  public final CardView pagesLayoutProfile;

  @NonNull
  public final TextView phoneProfile;

  @NonNull
  public final LinearLayout posCountSection;

  @NonNull
  public final RecyclerView postRecyclerViewProfile;

  @NonNull
  public final CardView profileDetailsSection;

  @NonNull
  public final CircleImageView profileImageProfile;

  @NonNull
  public final LinearLayout profileOptions;

  @NonNull
  public final LinearLayout referProfile;

  @NonNull
  public final TextView seeAllPostProfile;

  @NonNull
  public final CardView skillsLayoutProfile;

  @NonNull
  public final TextView studentInfoProfile;

  @NonNull
  public final TextView userDesignationProfile;

  @NonNull
  public final TextView userNameProfile;

  @NonNull
  public final CardView videoLayoutProfile;

  private ActivityProfileBinding(@NonNull NestedScrollView rootView,
      @NonNull LinearLayout addReferCode, @NonNull TextView addressProfile,
      @NonNull ImageButton backButtonProfile, @NonNull RelativeLayout backgroundProfile,
      @NonNull TextView birthDateProfile, @NonNull TextView bloodGroupProfile,
      @NonNull ImageButton btnUploadCoverPhoto, @NonNull ImageButton btnUploadProfilePhoto,
      @NonNull ImageView coverPictureProfile, @NonNull LinearLayout editProfileProfile,
      @NonNull TextView emailProfile, @NonNull TextView followersProfile,
      @NonNull LinearLayout friendsLayoutProfile, @NonNull TextView friendsProfile,
      @NonNull CardView groupsLayoutProfile, @NonNull TextView joinedProfile,
      @NonNull RelativeLayout mainProfileViewArea, @NonNull LinearLayout myPostProfile,
      @NonNull TextView myPostsProfile, @NonNull CardView pagesLayoutProfile,
      @NonNull TextView phoneProfile, @NonNull LinearLayout posCountSection,
      @NonNull RecyclerView postRecyclerViewProfile, @NonNull CardView profileDetailsSection,
      @NonNull CircleImageView profileImageProfile, @NonNull LinearLayout profileOptions,
      @NonNull LinearLayout referProfile, @NonNull TextView seeAllPostProfile,
      @NonNull CardView skillsLayoutProfile, @NonNull TextView studentInfoProfile,
      @NonNull TextView userDesignationProfile, @NonNull TextView userNameProfile,
      @NonNull CardView videoLayoutProfile) {
    this.rootView = rootView;
    this.addReferCode = addReferCode;
    this.addressProfile = addressProfile;
    this.backButtonProfile = backButtonProfile;
    this.backgroundProfile = backgroundProfile;
    this.birthDateProfile = birthDateProfile;
    this.bloodGroupProfile = bloodGroupProfile;
    this.btnUploadCoverPhoto = btnUploadCoverPhoto;
    this.btnUploadProfilePhoto = btnUploadProfilePhoto;
    this.coverPictureProfile = coverPictureProfile;
    this.editProfileProfile = editProfileProfile;
    this.emailProfile = emailProfile;
    this.followersProfile = followersProfile;
    this.friendsLayoutProfile = friendsLayoutProfile;
    this.friendsProfile = friendsProfile;
    this.groupsLayoutProfile = groupsLayoutProfile;
    this.joinedProfile = joinedProfile;
    this.mainProfileViewArea = mainProfileViewArea;
    this.myPostProfile = myPostProfile;
    this.myPostsProfile = myPostsProfile;
    this.pagesLayoutProfile = pagesLayoutProfile;
    this.phoneProfile = phoneProfile;
    this.posCountSection = posCountSection;
    this.postRecyclerViewProfile = postRecyclerViewProfile;
    this.profileDetailsSection = profileDetailsSection;
    this.profileImageProfile = profileImageProfile;
    this.profileOptions = profileOptions;
    this.referProfile = referProfile;
    this.seeAllPostProfile = seeAllPostProfile;
    this.skillsLayoutProfile = skillsLayoutProfile;
    this.studentInfoProfile = studentInfoProfile;
    this.userDesignationProfile = userDesignationProfile;
    this.userNameProfile = userNameProfile;
    this.videoLayoutProfile = videoLayoutProfile;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_refer_code;
      LinearLayout addReferCode = ViewBindings.findChildViewById(rootView, id);
      if (addReferCode == null) {
        break missingId;
      }

      id = R.id.address_profile;
      TextView addressProfile = ViewBindings.findChildViewById(rootView, id);
      if (addressProfile == null) {
        break missingId;
      }

      id = R.id.back_button_profile;
      ImageButton backButtonProfile = ViewBindings.findChildViewById(rootView, id);
      if (backButtonProfile == null) {
        break missingId;
      }

      id = R.id.background_profile;
      RelativeLayout backgroundProfile = ViewBindings.findChildViewById(rootView, id);
      if (backgroundProfile == null) {
        break missingId;
      }

      id = R.id.birth_date_profile;
      TextView birthDateProfile = ViewBindings.findChildViewById(rootView, id);
      if (birthDateProfile == null) {
        break missingId;
      }

      id = R.id.blood_group_profile;
      TextView bloodGroupProfile = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupProfile == null) {
        break missingId;
      }

      id = R.id.btn_upload_cover_photo;
      ImageButton btnUploadCoverPhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadCoverPhoto == null) {
        break missingId;
      }

      id = R.id.btn_upload_profile_photo;
      ImageButton btnUploadProfilePhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadProfilePhoto == null) {
        break missingId;
      }

      id = R.id.cover_picture_profile;
      ImageView coverPictureProfile = ViewBindings.findChildViewById(rootView, id);
      if (coverPictureProfile == null) {
        break missingId;
      }

      id = R.id.edit_profile_profile;
      LinearLayout editProfileProfile = ViewBindings.findChildViewById(rootView, id);
      if (editProfileProfile == null) {
        break missingId;
      }

      id = R.id.email_profile;
      TextView emailProfile = ViewBindings.findChildViewById(rootView, id);
      if (emailProfile == null) {
        break missingId;
      }

      id = R.id.followers_profile;
      TextView followersProfile = ViewBindings.findChildViewById(rootView, id);
      if (followersProfile == null) {
        break missingId;
      }

      id = R.id.friends_layout_profile;
      LinearLayout friendsLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (friendsLayoutProfile == null) {
        break missingId;
      }

      id = R.id.friends_profile;
      TextView friendsProfile = ViewBindings.findChildViewById(rootView, id);
      if (friendsProfile == null) {
        break missingId;
      }

      id = R.id.groups_layout_profile;
      CardView groupsLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (groupsLayoutProfile == null) {
        break missingId;
      }

      id = R.id.joined_profile;
      TextView joinedProfile = ViewBindings.findChildViewById(rootView, id);
      if (joinedProfile == null) {
        break missingId;
      }

      id = R.id.main_profile_view_area;
      RelativeLayout mainProfileViewArea = ViewBindings.findChildViewById(rootView, id);
      if (mainProfileViewArea == null) {
        break missingId;
      }

      id = R.id.my_post_profile;
      LinearLayout myPostProfile = ViewBindings.findChildViewById(rootView, id);
      if (myPostProfile == null) {
        break missingId;
      }

      id = R.id.myPosts_profile;
      TextView myPostsProfile = ViewBindings.findChildViewById(rootView, id);
      if (myPostsProfile == null) {
        break missingId;
      }

      id = R.id.pages_layout_profile;
      CardView pagesLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (pagesLayoutProfile == null) {
        break missingId;
      }

      id = R.id.phone_profile;
      TextView phoneProfile = ViewBindings.findChildViewById(rootView, id);
      if (phoneProfile == null) {
        break missingId;
      }

      id = R.id.pos_count_section;
      LinearLayout posCountSection = ViewBindings.findChildViewById(rootView, id);
      if (posCountSection == null) {
        break missingId;
      }

      id = R.id.post_recyclerView_profile;
      RecyclerView postRecyclerViewProfile = ViewBindings.findChildViewById(rootView, id);
      if (postRecyclerViewProfile == null) {
        break missingId;
      }

      id = R.id.profile_details_section;
      CardView profileDetailsSection = ViewBindings.findChildViewById(rootView, id);
      if (profileDetailsSection == null) {
        break missingId;
      }

      id = R.id.profile_image_profile;
      CircleImageView profileImageProfile = ViewBindings.findChildViewById(rootView, id);
      if (profileImageProfile == null) {
        break missingId;
      }

      id = R.id.profile_options;
      LinearLayout profileOptions = ViewBindings.findChildViewById(rootView, id);
      if (profileOptions == null) {
        break missingId;
      }

      id = R.id.refer_profile;
      LinearLayout referProfile = ViewBindings.findChildViewById(rootView, id);
      if (referProfile == null) {
        break missingId;
      }

      id = R.id.see_all_post_profile;
      TextView seeAllPostProfile = ViewBindings.findChildViewById(rootView, id);
      if (seeAllPostProfile == null) {
        break missingId;
      }

      id = R.id.skills_layout_profile;
      CardView skillsLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (skillsLayoutProfile == null) {
        break missingId;
      }

      id = R.id.studentInfo_profile;
      TextView studentInfoProfile = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoProfile == null) {
        break missingId;
      }

      id = R.id.user_designation_profile;
      TextView userDesignationProfile = ViewBindings.findChildViewById(rootView, id);
      if (userDesignationProfile == null) {
        break missingId;
      }

      id = R.id.user_name_profile;
      TextView userNameProfile = ViewBindings.findChildViewById(rootView, id);
      if (userNameProfile == null) {
        break missingId;
      }

      id = R.id.video_layout_profile;
      CardView videoLayoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (videoLayoutProfile == null) {
        break missingId;
      }

      return new ActivityProfileBinding((NestedScrollView) rootView, addReferCode, addressProfile,
          backButtonProfile, backgroundProfile, birthDateProfile, bloodGroupProfile,
          btnUploadCoverPhoto, btnUploadProfilePhoto, coverPictureProfile, editProfileProfile,
          emailProfile, followersProfile, friendsLayoutProfile, friendsProfile, groupsLayoutProfile,
          joinedProfile, mainProfileViewArea, myPostProfile, myPostsProfile, pagesLayoutProfile,
          phoneProfile, posCountSection, postRecyclerViewProfile, profileDetailsSection,
          profileImageProfile, profileOptions, referProfile, seeAllPostProfile, skillsLayoutProfile,
          studentInfoProfile, userDesignationProfile, userNameProfile, videoLayoutProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
