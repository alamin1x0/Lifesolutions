// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView recyclerViewSearch;

  @NonNull
  public final SearchView searchSearch;

  @NonNull
  public final TextView searchTextPostSearch;

  @NonNull
  public final LinearLayout textLayoutSearch;

  @NonNull
  public final Toolbar toolbarSearch;

  private ActivitySearchBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView recyclerViewSearch, @NonNull SearchView searchSearch,
      @NonNull TextView searchTextPostSearch, @NonNull LinearLayout textLayoutSearch,
      @NonNull Toolbar toolbarSearch) {
    this.rootView = rootView;
    this.recyclerViewSearch = recyclerViewSearch;
    this.searchSearch = searchSearch;
    this.searchTextPostSearch = searchTextPostSearch;
    this.textLayoutSearch = textLayoutSearch;
    this.toolbarSearch = toolbarSearch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerView_search;
      RecyclerView recyclerViewSearch = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSearch == null) {
        break missingId;
      }

      id = R.id.search_search;
      SearchView searchSearch = ViewBindings.findChildViewById(rootView, id);
      if (searchSearch == null) {
        break missingId;
      }

      id = R.id.search_text_post_search;
      TextView searchTextPostSearch = ViewBindings.findChildViewById(rootView, id);
      if (searchTextPostSearch == null) {
        break missingId;
      }

      id = R.id.text_layout_search;
      LinearLayout textLayoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (textLayoutSearch == null) {
        break missingId;
      }

      id = R.id.toolbar_search;
      Toolbar toolbarSearch = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSearch == null) {
        break missingId;
      }

      return new ActivitySearchBinding((LinearLayout) rootView, recyclerViewSearch, searchSearch,
          searchTextPostSearch, textLayoutSearch, toolbarSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
