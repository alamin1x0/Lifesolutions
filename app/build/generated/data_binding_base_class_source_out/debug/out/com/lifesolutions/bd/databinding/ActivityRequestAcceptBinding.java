// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lifesolutions.bd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRequestAcceptBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView acceptFriendRequest;

  @NonNull
  public final LinearLayout activityLayoutFriendRequest;

  @NonNull
  public final TextView addressFriendRequest;

  @NonNull
  public final ImageButton backButtonFriendRequestAccept;

  @NonNull
  public final RelativeLayout backgroundFriendRequest;

  @NonNull
  public final TextView birthDateFriendRequest;

  @NonNull
  public final TextView bloodGroupFriendRequest;

  @NonNull
  public final ImageView coverPhotoFriendRequest;

  @NonNull
  public final TextView deleteFriendRequest;

  @NonNull
  public final TextView designationFriendRequest;

  @NonNull
  public final CardView friendRequestDetailsSection;

  @NonNull
  public final TextView joinedFriendRequest;

  @NonNull
  public final TextView nameFriendRequest;

  @NonNull
  public final CircleImageView profilePictureFriendRequest;

  @NonNull
  public final TextView studentInfoFriendRequest;

  private ActivityRequestAcceptBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView acceptFriendRequest, @NonNull LinearLayout activityLayoutFriendRequest,
      @NonNull TextView addressFriendRequest, @NonNull ImageButton backButtonFriendRequestAccept,
      @NonNull RelativeLayout backgroundFriendRequest, @NonNull TextView birthDateFriendRequest,
      @NonNull TextView bloodGroupFriendRequest, @NonNull ImageView coverPhotoFriendRequest,
      @NonNull TextView deleteFriendRequest, @NonNull TextView designationFriendRequest,
      @NonNull CardView friendRequestDetailsSection, @NonNull TextView joinedFriendRequest,
      @NonNull TextView nameFriendRequest, @NonNull CircleImageView profilePictureFriendRequest,
      @NonNull TextView studentInfoFriendRequest) {
    this.rootView = rootView;
    this.acceptFriendRequest = acceptFriendRequest;
    this.activityLayoutFriendRequest = activityLayoutFriendRequest;
    this.addressFriendRequest = addressFriendRequest;
    this.backButtonFriendRequestAccept = backButtonFriendRequestAccept;
    this.backgroundFriendRequest = backgroundFriendRequest;
    this.birthDateFriendRequest = birthDateFriendRequest;
    this.bloodGroupFriendRequest = bloodGroupFriendRequest;
    this.coverPhotoFriendRequest = coverPhotoFriendRequest;
    this.deleteFriendRequest = deleteFriendRequest;
    this.designationFriendRequest = designationFriendRequest;
    this.friendRequestDetailsSection = friendRequestDetailsSection;
    this.joinedFriendRequest = joinedFriendRequest;
    this.nameFriendRequest = nameFriendRequest;
    this.profilePictureFriendRequest = profilePictureFriendRequest;
    this.studentInfoFriendRequest = studentInfoFriendRequest;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRequestAcceptBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRequestAcceptBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_request_accept, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRequestAcceptBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accept_friend_request;
      TextView acceptFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (acceptFriendRequest == null) {
        break missingId;
      }

      id = R.id.activity_layout_friend_request;
      LinearLayout activityLayoutFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (activityLayoutFriendRequest == null) {
        break missingId;
      }

      id = R.id.address_friend_request;
      TextView addressFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (addressFriendRequest == null) {
        break missingId;
      }

      id = R.id.back_button_friend_request_accept;
      ImageButton backButtonFriendRequestAccept = ViewBindings.findChildViewById(rootView, id);
      if (backButtonFriendRequestAccept == null) {
        break missingId;
      }

      id = R.id.background_friend_request;
      RelativeLayout backgroundFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (backgroundFriendRequest == null) {
        break missingId;
      }

      id = R.id.birth_date_friend_request;
      TextView birthDateFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (birthDateFriendRequest == null) {
        break missingId;
      }

      id = R.id.blood_group_friend_request;
      TextView bloodGroupFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (bloodGroupFriendRequest == null) {
        break missingId;
      }

      id = R.id.cover_photo_friend_request;
      ImageView coverPhotoFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (coverPhotoFriendRequest == null) {
        break missingId;
      }

      id = R.id.delete_friend_request;
      TextView deleteFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (deleteFriendRequest == null) {
        break missingId;
      }

      id = R.id.designation_friend_request;
      TextView designationFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (designationFriendRequest == null) {
        break missingId;
      }

      id = R.id.friend_request_details_section;
      CardView friendRequestDetailsSection = ViewBindings.findChildViewById(rootView, id);
      if (friendRequestDetailsSection == null) {
        break missingId;
      }

      id = R.id.joined_friend_request;
      TextView joinedFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (joinedFriendRequest == null) {
        break missingId;
      }

      id = R.id.name_friend_request;
      TextView nameFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (nameFriendRequest == null) {
        break missingId;
      }

      id = R.id.profile_picture_friend_request;
      CircleImageView profilePictureFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (profilePictureFriendRequest == null) {
        break missingId;
      }

      id = R.id.studentInfo_friend_request;
      TextView studentInfoFriendRequest = ViewBindings.findChildViewById(rootView, id);
      if (studentInfoFriendRequest == null) {
        break missingId;
      }

      return new ActivityRequestAcceptBinding((NestedScrollView) rootView, acceptFriendRequest,
          activityLayoutFriendRequest, addressFriendRequest, backButtonFriendRequestAccept,
          backgroundFriendRequest, birthDateFriendRequest, bloodGroupFriendRequest,
          coverPhotoFriendRequest, deleteFriendRequest, designationFriendRequest,
          friendRequestDetailsSection, joinedFriendRequest, nameFriendRequest,
          profilePictureFriendRequest, studentInfoFriendRequest);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
