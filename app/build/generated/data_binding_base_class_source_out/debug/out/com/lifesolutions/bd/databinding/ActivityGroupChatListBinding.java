// Generated by view binder compiler. Do not edit!
package com.lifesolutions.bd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.lifesolutions.bd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupChatListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appbarGroupChatList;

  @NonNull
  public final FloatingActionButton createGroupGroupChatList;

  @NonNull
  public final ProgressBar progressbarGroupChatList;

  @NonNull
  public final RecyclerView recyclerViewGroupChatList;

  @NonNull
  public final Toolbar toolbarGroupChatList;

  private ActivityGroupChatListBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayout appbarGroupChatList,
      @NonNull FloatingActionButton createGroupGroupChatList,
      @NonNull ProgressBar progressbarGroupChatList,
      @NonNull RecyclerView recyclerViewGroupChatList, @NonNull Toolbar toolbarGroupChatList) {
    this.rootView = rootView;
    this.appbarGroupChatList = appbarGroupChatList;
    this.createGroupGroupChatList = createGroupGroupChatList;
    this.progressbarGroupChatList = progressbarGroupChatList;
    this.recyclerViewGroupChatList = recyclerViewGroupChatList;
    this.toolbarGroupChatList = toolbarGroupChatList;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupChatListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupChatListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_chat_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupChatListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar_group_chat_list;
      AppBarLayout appbarGroupChatList = ViewBindings.findChildViewById(rootView, id);
      if (appbarGroupChatList == null) {
        break missingId;
      }

      id = R.id.create_group_group_chat_list;
      FloatingActionButton createGroupGroupChatList = ViewBindings.findChildViewById(rootView, id);
      if (createGroupGroupChatList == null) {
        break missingId;
      }

      id = R.id.progressbar_group_chat_list;
      ProgressBar progressbarGroupChatList = ViewBindings.findChildViewById(rootView, id);
      if (progressbarGroupChatList == null) {
        break missingId;
      }

      id = R.id.recyclerView_group_chat_list;
      RecyclerView recyclerViewGroupChatList = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewGroupChatList == null) {
        break missingId;
      }

      id = R.id.toolbar_group_chat_list;
      Toolbar toolbarGroupChatList = ViewBindings.findChildViewById(rootView, id);
      if (toolbarGroupChatList == null) {
        break missingId;
      }

      return new ActivityGroupChatListBinding((RelativeLayout) rootView, appbarGroupChatList,
          createGroupGroupChatList, progressbarGroupChatList, recyclerViewGroupChatList,
          toolbarGroupChatList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
